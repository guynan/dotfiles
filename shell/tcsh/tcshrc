# tcshrc
# Guy Nankivell, 2016

# Good idea to define the OS maybe
set UNAMESTR=`uname`

if ( "$UNAMESTR" == 'Linux' ) then
	set PLATFORM='linux'
else if ( "$UNAMESTR" == 'FreeBSD') then
	set PLATFORM='bsd'
else if ( "$UNAMESTR" == 'Darwin') then
	set PLATFORM='mac'
else if ( "$UNAMESTR" == 'DragonFly' ) then
	set PLATFORM='bsd'
else if ( "$UNAMESTR" == 'OpenBSD' ) then
	set PLATFORM='obsd'
else
	set PLATFORM='bsd'
endif

#
# Semantic tcsh settings
#

# This creates a history file as tcsh does not have one by default
#set savehist = 2000 
#set histfile = ~/.tcsh_history 

# This is fantastic; gives vim bindings in shell
bindkey -v

# Allows for tab-completion 
set autolist

setenv EDITOR '/usr/bin/vi'

setenv PATH $PATH\:$HOME/.cargo/bin


#Environment variables

set nobeep

# This is for Lemonbar
setenv PANEL_FIFO '/tmp/panel-fifo'

# Aliases

alias :wq 'exit'

if ($PLATFORM == linux) then
	alias cc 'gcc' 
endif

alias grep		'grep --color=always'
alias fgrep		'fgrep --color=auto'
alias egrep		'egrep --color=auto'

alias less		'less -r'

alias diff		'diff --color=always'

# This adds colours to things like ls and grep 
# OS dependent stuff

if ( $PLATFORM == 'linux' ) then
		alias ls 'ls --color=auto'
		alias lal 'ls -al'
		alias ll 'ls -l'
		alias la 'ls -a'

else if ( $PLATFORM == 'obsd' ) then
		alias ls 'ls '
		alias lal 'ls -al'
		alias ll 'ls -l'
		alias la 'ls -a'
		unalias grep
		unalias fgrep
		unalias egrep 

else if ( $PLATFORM == 'bsd' ) then
		alias ls 'ls -IG'
		alias lal 'ls -alGh'
		alias ll 'ls -lGh'
		alias la 'ls -aG'

else if ( $PLATFORM == 'mac' ) then
		alias ls 'ls -G'
		alias lal 'ls -alGh'
		alias ll 'ls -lGh'
		alias la 'ls -aG'
endif

# Here are some other additions to keep me sane
alias free		'free -m'
alias vol		'alsamixer'
alias b			'/bin/bash'
alias pingu		'ping www.google.com'
alias pydie		'pkill python'
alias llog		'ls *.log | sort -g | tail -1 | xargs tail -f'

# This makes your screen red bro
alias night 'xflux -l -36.85 -g 174.8 > /dev/null'

# BTRFS
alias mksubvol 'btrfs subvolume create'

# This adds x.flux functionality, approbatory to Auckland
set checkxflux=`ps ax | pgrep xflux`
set checkxfluxbin=`where xflux`

if ( $checkxflux == "" && $checkxfluxbin != "" ) then
	xflux -l -36.85 -g 174.8 > /dev/null
#else
#	pkill xflux > /dev/null
endif

#
# Prompt configurations
#

set     red="%{\033[1;31m%}"
set   green="%{\033[0;32m%}"
set  yellow="%{\033[1;33m%}"
set    blue="%{\033[1;34m%}"
set magenta="%{\033[1;35m%}"
set    cyan="%{\033[1;36m%}"
set    grey="%{\033[1;30m%}"
set   white="%{\033[0;37m%}"
set     end="%{\033[0m%}" # Don't fuck with this line

#set prompt="%B%m%b ${white}%c${cyan} >${end} "
set prompt="${blue}%B%m%b ${white}%c${grey} >${end} "



# Completions

complete cd 'C/*/d/'
complete rmdir 'C/*/d/'
complete alias 'p/1/a/'
complete unalias 'p/1/a/'
complete unset 'p/1/s/'
complete set 'p/1/s/'
complete unsetenv 'p/1/e/'
complete setenv 'p/1/e/'
complete limit 'p/1/l/'
complete bindkey 'C/*/b/'
complete chgrp 'p/1/g/'
complete chown 'p/1/u/' # TODO Support user:group completion
complete uncomplete 'p/*/X/'
complete kill 'c/-/S/' 'n/*/`ps -axco pid= | sort`/'
complete pkill 'c/-/S/' 'n/*/`ps -axco command= | sort -u`/'

# Detect language files
complete python 'p/*/f:*.py/'
complete python3 'p/*/f:*.py/'
complete clisp 'p/*/f:*.lisp/'
complete cc 'p/*/f:*.[cao]/'
complete javac 'p/*/f:*.java/'
complete ssh 'p@1@`cut -d " " -f 1 ~/.ssh/known_hosts | sort -u`@'
#complete gcc 'p/*/f:*.[cao]/'
complete perl 'p/*/f:*.[pP][lL]/'
complete gcc \
			c/-std=/"(c89 c99 c11 gnu89 gnu99 gnu11)"/ \
			c/-W/"(all aggregate-return cast-align cast-qual \
				comment conversion enum-clash error format \
				id-clash-len implicit missing-prototypes \
				no-parentheses pointer-arith return-type shadow \
				strict-prototypes switch uninitialized unused \
				write-strings)"/ \
			c/-/"(f W vspec v vpath ansi traditional \
				traditional-cpp trigraphs pedantic x o l c g L \
				I D U O O2 C E H B b V M MD MM i dynamic \
				nodtdlib static nostdinc undef)"/ \
			'p/*/f:*.[caho]/' 


complete which 'p/1/c/'
complete where 'p/1/c/'
complete man 'p/1/c/'
complete apropos 'p/1/c/'


# The "tcsh_root_profile" is a file I added in the root
# directory of all my OS. Every time the .tcshrc is sourced
# it goes looking for this file. Obviously it is only in
# /root and so only root gets these modifications. At the 
# moment it is only mods to the prompt.

if ( -f $HOME/.tcsh_root_profile) then
	source $HOME/.tcsh_root_profile
endif

if ( -f $HOME/.uni.tcsh) then
	source $HOME/.uni.tcsh
endif

# Clean up
unset red green yellow blue magenta cyan yellow white end
unset UNAMESTR PLATFORM
unset checkxflux checkxfluxbin

# fi
